{
    "name": "k3d",
    "displayName": "k3d - K3s in Docker",
    "description": "Manage k3d clusters from VS Code",
    "version": "0.0.1",
    "preview": true,
    "publisher": "k3d-io",
    "engines": {
        "vscode": "^1.75.1"
    },
    "license": "MIT",
    "categories": [
        "Other"
    ],
    "keywords": [
        "kubernetes",
        "k3d",
        "kubernetes-extension-cloud-provider"
    ],
    "icon": "images/k3d_logo_black_blue.png",
    "galleryBanner": {
        "theme": "light"
    },
    "homepage": "https://github.com/k3d-io/vscode-k3d/blob/master/README.md",
    "activationEvents": [
        "onCommand:extension.vsKubernetesConfigureFromCluster",
        "onCommand:extension.vsKubernetesCreateCluster",
        "onView:kubernetes.cloudExplorer"
    ],
    "main": "./dist/extension",
    "contributes": {
        "configuration": [
            {
                "title": "k3d - K3s in Docker",
                "description": "Configuration for the k3d Kubernetes provider.",
                "properties": {
                    "k3d.paths": {
                        "type": "object",
                        "title": "k3d path",
                        "description": "k3d executable path",
                        "properties": {
                            "k3d.paths.k3d": {
                                "type": "string",
                                "default": "k3d",
                                "description": "k3d executable path."
                            },
                            "k3d.paths.k3d-linux": {
                                "type": "string",
                                "default": "k3d",
                                "description": "k3d executable path (on Linux)."
                            },
                            "k3d.paths.k3d-mac": {
                                "type": "string",
                                "default": "k3d",
                                "description": "k3d executable path (on Mac)."
                            },
                            "k3d.paths.k3d-windows": {
                                "type": "string",
                                "default": "k3d",
                                "description": "k3d executable path (on Windows)."
                            }
                        }
                    },
                    "k3d.defaults": {
                        "type": "object",
                        "title": "New k3d cluster defaults",
                        "description": "Default values for new k3d clusters",
                        "properties": {
                            "k3d.defaults.numServers": {
                                "type": "integer",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 100,
                                "description": "Default number of server nodes for new k3d clusters."
                            },
                            "k3d.defaults.numAgents": {
                                "type": "integer",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 100,
                                "description": "Default number of agent nodes for new k3d clusters."
                            },
                            "k3d.defaults.network": {
                                "type": "string",
                                "default": "",
                                "description": "Default existing network for new k3d cluster."
                            },
                            "k3d.defaults.image": {
                                "type": "string",
                                "default": "",
                                "description": "Default image for new k3d clusters."
                            },
                            "k3d.defaults.serverArgs": {
                                "type": "string",
                                "default": "",
                                "markdownDescription": "Default [K3S server arguments](https://rancher.com/docs/k3s/latest/en/installation/install-options/server-config/) for new k3d clusters."
                            },
                            "k3d.defaults.createRegistry": {
                                "type": "boolean",
                                "default": false,
                                "description": "Create a new registry by default for new k3d clusters."
                            },
                            "k3d.defaults.useRegistries": {
                                "type": "array",
                                "default": [],
                                "description": "Use these registries by default for new k3d clusters."
                            },
                            "k3d.defaults.growServers": {
                                "type": "boolean",
                                "default": false,
                                "description": "Create new k3d clusters with the right flags for growing the group of server nodes."
                            }
                        }
                    },
                    "k3d.images": {
                        "type": "object",
                        "description": "Settings for images used for creating new k3d cluster nodes",
                        "properties": {
                            "k3d.images.proposalsRegistry": {
                                "type": "string",
                                "default": "https://registry.hub.docker.com",
                                "format": "uri",
                                "examples": [
                                    "https://registry.hub.docker.com"
                                ],
                                "description": "Registry used for looking for images for the cluster (defaults to the Docker Hub)."
                            },
                            "k3d.images.proposalsRepo": {
                                "type": "string",
                                "default": "rancher/k3s",
                                "examples": [
                                    "rancher/k3s"
                                ],
                                "markdownDescription": "Image repository used for proposing different images, including the namespace (ie, `rancher/k3s`)."
                            },
                            "k3d.images.proposalsTagRegex": {
                                "type": "string",
                                "default": "",
                                "examples": [
                                    ".*1\\.19.*"
                                ],
                                "markdownDescription": "Filter images by a _regex_ (ie, `.*v1\\.19.*` for filtering all the images with _1.19_)."
                            }
                        }
                    },
                    "k3d.dockerHost": {
                        "type": "string",
                        "markdownDescription": "Equivalent to setting the DOCKER_HOST environment variable (for example, ssh://myuser@mymachine or tcp://1.2.3.4). When not provided, it will use the value specified in the `#docker.host#` setting from the Docker extension (if present), or the local daemon.",
                        "default": ""
                    },
                    "k3d.updateChannel": {
                        "type": "string",
                        "enum": [
                            "stable",
                            "all"
                        ],
                        "markdownEnumDescriptions": [
                            "Only consider **stable** releases",
                            "Consider any k3d release (including `alpha` and `beta` releases)"
                        ],
                        "default": "all",
                        "description": "Versions of k3d that will be considered when downloading the binary from the list of GitHub releases."
                    },
                    "k3d.updateKubeconfig": {
                        "type": "string",
                        "enum": [
                            "onCreate",
                            "always",
                            "never"
                        ],
                        "markdownEnumDescriptions": [
                            "Update the `kubeconfig` file only after creating a new cluster",
                            "Always update the `kubeconfig` file",
                            "Do not modify the existing `kubeconfig` file"
                        ],
                        "default": "always",
                        "description": "Update the kubeconfig after creating or deleting a cluster."
                    },
                    "k3d.replaceContext": {
                        "type": "string",
                        "enum": [
                            "new",
                            "oldest"
                        ],
                        "markdownEnumDescriptions": [
                            "Wait until the new cluster is ready for switching to it when replacing clusters",
                            "Switch to the oldest, existing cluster immediately"
                        ],
                        "default": "new",
                        "description": "When replacing clusters, the new cluster will be automatically activated by default ('new'). However, when some other clusters exist, we can switch to the oldest, existing cluster immediately, not waiting for the new cluster ('oldest')."
                    }
                }
            }
        ],
        "commands": [
            {
                "command": "extension.vsKubernetesk3dCreate",
                "category": "Kubernetes: k3d",
                "title": "Create Cluster"
            },
            {
                "command": "extension.vsKubernetesk3dCreateLast",
                "category": "Kubernetes: k3d",
                "title": "Create Cluster (with last settings)"
            },
            {
                "command": "extension.vsKubernetesk3dDelete",
                "category": "Kubernetes: k3d",
                "title": "Delete Cluster"
            },
            {
                "command": "extension.vsKubernetesk3dReplace",
                "category": "Kubernetes: k3d",
                "title": "Replace Cluster"
            },
            {
                "command": "extension.vsKubernetesk3dReplaceLast",
                "category": "Kubernetes: k3d",
                "title": "Replace Cluster (with last settings)"
            },
            {
                "command": "extension.vsKubernetesk3dAddAgent",
                "category": "Kubernetes: k3d",
                "title": "Add an Agent node"
            },
            {
                "command": "extension.vsKubernetesk3dDeleteAgent",
                "category": "Kubernetes: k3d",
                "title": "Delete an Agent node"
            },
            {
                "command": "extension.vsKubernetesk3dAddServer",
                "category": "Kubernetes: k3d",
                "title": "Add a Server node"
            },
            {
                "command": "extension.vsKubernetesk3dDeleteServer",
                "category": "Kubernetes: k3d",
                "title": "Delete a Server node"
            }
        ],
        "keybindings": [
            {
                "command": "extension.vsKubernetesk3dCreateLast",
                "key": "ctrl+k ctrl+c"
            },
            {
                "command": "extension.vsKubernetesk3dReplaceLast",
                "key": "ctrl+k ctrl+r"
            }
        ],
        "menus": {
            "view/item/context": [
                {
                    "command": "extension.vsKubernetesk3dCreate",
                    "group": "Kubernetes: k3d: create",
                    "when": "viewItem == kubernetes.cloudExplorer.cloud.k3d"
                },
                {
                    "command": "extension.vsKubernetesk3dCreateLast",
                    "group": "Kubernetes: k3d: create",
                    "when": "viewItem == kubernetes.cloudExplorer.cloud.k3d"
                },
                {
                    "command": "extension.vsKubernetesk3dDelete",
                    "group": "Kubernetes: k3d: create",
                    "when": "viewItem =~ /k3d\\.cluster/"
                },
                {
                    "command": "extension.vsKubernetesk3dReplace",
                    "group": "Kubernetes: k3d: create",
                    "when": "viewItem =~ /k3d\\.cluster/"
                },
                {
                    "command": "extension.vsKubernetesk3dReplaceLast",
                    "group": "Kubernetes: k3d: create",
                    "when": "viewItem =~ /k3d\\.cluster/"
                },
                {
                    "command": "extension.vsKubernetesk3dAddAgent",
                    "group": "Kubernetes: k3d: nodes",
                    "when": "viewItem =~ /k3d\\.cluster/"
                },
                {
                    "command": "extension.vsKubernetesk3dDeleteAgent",
                    "group": "Kubernetes: k3d: nodes",
                    "when": "viewItem =~ /k3d\\.nodeAgentRemovable/"
                },
                {
                    "command": "extension.vsKubernetesk3dAddServer",
                    "group": "Kubernetes: k3d: nodes",
                    "when": "viewItem =~ /k3d\\.clusterServerGrowable/"
                },
                {
                    "command": "extension.vsKubernetesk3dDeleteServer",
                    "group": "Kubernetes: k3d: nodes",
                    "when": "viewItem =~ /k3d\\.nodeServerRemovable/"
                }
            ]
        }
    },
    "scripts": {
        "compile": "webpack --mode none",
        "watch": "webpack --mode none --watch",
        "test": "npm run compile",
        "test-compile": "tsc -p ./",
        "lint": "npx eslint . --ext .ts",
        "lint:fix": "npx eslint . --ext .ts --fix",
        "vscode:prepublish": "webpack --mode production",
        "dist": "vsce package",
        "dist-tools": "npm install -g vsce"
    },
    "extensionDependencies": [
        "ms-kubernetes-tools.vscode-kubernetes-tools"
    ],
    "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "^18.13.0",
        "@types/request-promise-native": "^1.0.18",
        "@types/shelljs": "^0.8.11",
        "@types/tmp": "0.2.3",
        "@types/url-join": "^4.0.1",
        "@types/vscode": "^1.75.1",
        "@typescript-eslint/eslint-plugin": "^5.52.0",
        "@typescript-eslint/parser": "^5.52.0",
        "@vscode/test-electron": "^2.2.3",
        "eslint": "^8.34.0",
        "ts-loader": "^9.4.2",
        "typescript": "^4.9.5",
        "vsce": "^2.15.0",
        "webpack": "^5.75.0",
        "webpack-cli": "^5.0.1"
    },
    "dependencies": {
        "@octokit/rest": "^19.0.7",
        "dedent": "^0.7.0",
        "docker-cli-js": "^2.10.0",
        "docker-client": "^1.38.1",
        "download": "^8.0.0",
        "mkdirp": "^2.1.3",
        "replace-string": "^4.0.0",
        "request": "^2.88.2",
        "request-promise-native": "^1.0.9",
        "rxjs": "^7.8.0",
        "shelljs": "^0.8.5",
        "spawn-rx": "^3.0.0",
        "tmp": "^0.2.1",
        "url-join": "^5.0.0",
        "vscode-azureextensionui": "^0.50.0",
        "vscode-kubernetes-tools-api": "^1.3.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/k3d-io/vscode-k3d"
    },
    "bugs": {
        "url": "https://github.com/k3d-io/vscode-k3d/issues"
    }
}
